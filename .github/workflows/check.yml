name: "nix flake check"
on:
  pull_request:
  push:
jobs:
  check:
    runs-on: ubuntu-latest
    environment: cachix

    steps:
    - uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0

    - uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
        extra_nix_config: |
          experimental-features = nix-command flakes

    - uses: cachix/cachix-action@v8
      if: github.event_name == 'push'
      with:
        name: dram
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - run: nix flake check -vL
    - run: nix flake archive

    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        mkdir upload
        nix build -o nix-dram-static .#packages.x86_64-linux.nix-dram-static
        cp nix-dram-static/bin/nix ./upload/nix-dram-x86_64-linux

    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Version ${{ github.ref }}

    - name: Upload Release Asset
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./upload/nix-dram-x86_64-linux
        asset_name: nix-dram-x86_64-linux
        asset_content_type: application/x-executable
